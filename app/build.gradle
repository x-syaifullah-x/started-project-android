plugins {
    id "com.android.application"
    id "kotlin-android"
}

android {
    String packageName = "id.xxx.example"
    namespace packageName
    testNamespace "${packageName}.test"

    compileSdk build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools
    ndkVersion build_versions.ndk

    defaultConfig {
        minSdk build_versions.min_sdk
        targetSdk build_versions.target_sdk
        versionCode build_versions.code
        versionName build_versions.name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resConfigs "en"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

        externalNativeBuild {
            cmake {
                String FIELD_LIB_NAME_JNI_ON_LOAD = "LIB_NAME_JNI_ON_LOAD"
                String VALUE_LIB_NAME_JNI_ON_LOAD = "example-jni-on-load"
                buildConfigField "String", FIELD_LIB_NAME_JNI_ON_LOAD, "\"${VALUE_LIB_NAME_JNI_ON_LOAD}\""
                arguments "-D${FIELD_LIB_NAME_JNI_ON_LOAD}=${VALUE_LIB_NAME_JNI_ON_LOAD}"

                String FIELD_LIB_NAME_NORMAL = "LIB_NAME_NORMAL"
                String VALUE_LIB_NAME_NORMAL = "normal"
                buildConfigField "String", FIELD_LIB_NAME_NORMAL, "\"${VALUE_LIB_NAME_NORMAL}\""
                arguments "-DAPI_KEY=0123456789", "-D${FIELD_LIB_NAME_NORMAL}=${VALUE_LIB_NAME_NORMAL}"

                cppFlags "-fvisibility=hidden"
            }
        }
    }

    externalNativeBuild {
        cmake {
            path file("src/main/cpp/CMakeLists.txt")
            version "3.22.1"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    signingConfigs {
        def home_dir = System.getProperty("user.home")
        def store_file = file("$home_dir/.android/debug.keystore")
        def store_password = "android"
        def key_alias = "androiddebugkey"
        def key_password = "android"

        debug {
            storeFile store_file
            storePassword store_password
            keyAlias key_alias
            keyPassword key_password
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.debug
        }
    }

    buildFeatures {
        buildConfig true
        viewBinding true
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging false
        }
//        exclude "META-INF/**"
//        exclude "okhttp3/**"
//        exclude "kotlin/**"
//        exclude "org/**"
//        exclude "**.properties"
//        exclude "**.bin"
//        exclude "kotlin-tooling-metadata.json"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])

    implementation "androidx.appcompat:appcompat:$vAndroidxAppCompat"
    implementation "com.google.android.material:material:$vMaterial"

    testImplementation "junit:junit:$vJunit"
    testImplementation "org.mockito:mockito-core:$vMockito"
    testImplementation "org.mockito:mockito-inline:$vMockitoInline"

    androidTestImplementation "androidx.test.ext:junit-ktx:$vAndroidxTestExtJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$vAndroidxTestEspresso"
    androidTestImplementation "androidx.test:rules:$vAndroidxTestRules"
    implementation "androidx.test.espresso:espresso-idling-resource:$vAndroidxTestEspresso"
}